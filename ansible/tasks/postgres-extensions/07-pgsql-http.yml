- name: Install pgsql-http
  block:
    - name: Debug existing APT sources
      command: "cat /etc/apt/sources.list /etc/apt/sources.list.d/*.list"
      register: apt_sources
      changed_when: false
      ignore_errors: yes

    - name: Show APT sources
      debug:
        var: apt_sources.stdout_lines

    - name: Add PostgreSQL GPG key
      apt_key:
        url: "https://www.postgresql.org/media/keys/ACCC4CF8.asc"
        state: present
      become: yes

    - name: Update APT cache with detailed output
      command: "apt-get update"
      register: apt_update_output
      ignore_errors: yes
      changed_when: false

    - name: Debug APT update output
      debug:
        msg: |
          stdout: {{ apt_update_output.stdout | default('No stdout') }}
          stderr: {{ apt_update_output.stderr | default('No stderr') }}

    - name: Fail if APT update failed
      fail:
        msg: "APT update failed: {{ apt_update_output.stderr | default('No stderr available') }}"
      when: apt_update_output.rc != 0

    - name: Install build dependencies for pgsql-http
      apt:
        name:
          - build-essential
          - postgresql-server-dev-15
          - libcurl4-openssl-dev
        state: present
        update_cache: no
      become: yes
      retries: 3
      delay: 5
      register: apt_install
      until: apt_install is success

    - name: Get PostgreSQL sharedir
      command: "/usr/lib/postgresql/bin/pg_config --sharedir"
      register: pg_sharedir
      changed_when: false

    - name: Debug PostgreSQL sharedir
      debug:
        var: pg_sharedir.stdout

    - name: Ensure extension directory exists
      file:
        path: "{{ pg_sharedir.stdout }}/extension"
        state: directory
        owner: postgres
        group: postgres
        mode: '0755'
      become: yes

    - name: Ensure /tmp directory is writable
      file:
        path: /tmp
        state: directory
        mode: '1777'
      become: yes

    - name: Download pgsql-http source
      get_url:
        url: "https://github.com/pramsey/pgsql-http/archive/v1.5.0.tar.gz"
        dest: "/tmp/pgsql-http.tar.gz"
        mode: '0644'
      become: yes

    - name: Unpack pgsql-http source
      unarchive:
        src: "/tmp/pgsql-http.tar.gz"
        dest: "/tmp"
        remote_src: yes
      become: yes

    - name: Build pgsql-http
      command: "make"
      args:
        chdir: "/tmp/pgsql-http-1.5.0"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/lib/postgresql/bin"
        PG_CONFIG: "/usr/lib/postgresql/bin/pg_config"
      become: yes

    - name: Install pgsql-http to staging directory
      command: "make install DESTDIR=/tmp/pgsql-http-install"
      args:
        chdir: "/tmp/pgsql-http-1.5.0"
      environment:
        PATH: "{{ ansible_env.PATH }}:/usr/lib/postgresql/bin"
        PG_CONFIG: "/usr/lib/postgresql/bin/pg_config"
      become: yes
      register: pgsql_http_install

    - name: Debug installed files
      shell: "find /tmp/pgsql-http-install -type f"
      register: installed_files
      changed_when: false
      become: yes

    - name: Show installed files
      debug:
        var: installed_files.stdout_lines

    - name: Verify files exist before copy
      shell: "ls -l /tmp/pgsql-http-install/usr/share/postgresql/15/extension/"
      register: pre_copy_check
      changed_when: false
      become: yes
      failed_when: pre_copy_check.rc != 0

    - name: Show pre-copy file check
      debug:
        var: pre_copy_check.stdout_lines

    - name: Copy pgsql-http extension files to correct location
      copy:
        src: "/tmp/pgsql-http-install/usr/share/postgresql/15/extension/"
        dest: "{{ pg_sharedir.stdout }}/extension/"
        owner: postgres
        group: postgres
        mode: '0644'
        remote_src: yes
      become: yes
      when: pgsql_http_install is changed

    - name: Debug pgsql-http install output
      debug:
        msg: |
          stdout: {{ pgsql_http_install.stdout | default('No stdout') }}
          stderr: {{ pgsql_http_install.stderr | default('No stderr') }}
      when: pgsql_http_install is changed

    - name: Verify pgsql-http installation
      command: "ls {{ pg_sharedir.stdout }}/extension/http.control"
      register: pgsql_http_verify
      changed_when: false
      failed_when: pgsql_http_verify.rc != 0

    - name: Cleanup staging directory
      file:
        path: "/tmp/pgsql-http-install"
        state: absent
      become: yes