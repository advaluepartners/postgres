# Replace the failing nginx startup tasks with these:

- name: Nginx - create service file
  template:
    src: files/nginx.service.j2
    dest: /etc/systemd/system/nginx.service
    owner: root
    group: root
    mode: '0644'
  when: stage2_nix

# Before reloading systemd, add this to kill any existing nginx instances:
- name: Stop any running nginx processes not managed by systemd
  shell: |
    # Try graceful shutdown first
    if [ -x /usr/local/nginx/sbin/nginx ]; then
      /usr/local/nginx/sbin/nginx -s stop || true
    fi
    # Make sure all nginx processes are stopped
    pkill nginx || true
    # Wait a moment to ensure ports are freed
    sleep 2
  ignore_errors: yes
  when: stage2_nix

- name: Nginx - reload systemd
  systemd:
    daemon_reload: yes
  when: stage2_nix

# FIXED: Enable but don't start nginx during AMI build
- name: Nginx - enable service for future startup
  systemd:
    name: nginx
    enabled: yes
    daemon_reload: yes
  when: stage2_nix
  # Remove the 'state: started' to avoid starting during build

- name: Nginx - verify service file is created
  stat:
    path: /etc/systemd/system/nginx.service
  register: nginx_service_file
  when: stage2_nix

- name: Display nginx service status
  debug:
    msg: "Nginx service file created: {{ nginx_service_file.stat.exists }}, enabled for boot but not started during AMI build"
  when: stage2_nix

# Remove or comment out these verification tasks that try to check running nginx:
# - name: Verify nginx service is running correctly
#   block:
#     - name: Check service status
#       shell: |
#         echo "=== Nginx Service Status ==="
#         systemctl status nginx
#         echo "=== Nginx Port Bindings ==="
#         ss -tulpn | grep -E ':80|:443'
#         echo "=== Nginx Process List ==="
#         ps aux | grep nginx | grep -v grep
#       register: nginx_status
#       changed_when: false
#     - name: Show nginx status
#       debug:
#         var: nginx_status.stdout_lines
#   when: stage2_nix
