# Keep the installation tasks but add conditions
- name: PgBouncer - download & install dependencies
  apt:
    pkg:
      - build-essential
      - libssl-dev
      - pkg-config
      - libevent-dev
      - libsystemd-dev
    update_cache: yes
    cache_valid_time: 3600
  when: debpkg_mode or stage2_nix

# Add when conditions to download, unpack, configure, build, install
- name: PgBouncer - download latest release
  get_url:
    url: "https://www.pgbouncer.org/downloads/files/{{ pgbouncer_release }}/pgbouncer-{{ pgbouncer_release }}.tar.gz"
    dest: /tmp/pgbouncer-{{ pgbouncer_release }}.tar.gz
    checksum: "{{ pgbouncer_release_checksum }}"
    timeout: 60
  when: debpkg_mode or stage2_nix

- name: PgBouncer - unpack archive
  unarchive:
    remote_src: yes
    src: /tmp/pgbouncer-{{ pgbouncer_release }}.tar.gz
    dest: /tmp
  become: yes

- name: PgBouncer - configure
  shell:
    cmd: "./configure --prefix=/usr/local --with-systemd"
    chdir: /tmp/pgbouncer-{{ pgbouncer_release }}
  become: yes

- name: PgBouncer - build
  make:
    chdir: /tmp/pgbouncer-{{ pgbouncer_release }}
  become: yes

- name: PgBouncer - install
  make:
    chdir: /tmp/pgbouncer-{{ pgbouncer_release }}
    target: install
  become: yes

- name: Debug - Show execution mode
  debug:
    msg: 
      - "Running in: {{ 'nixpkg_mode' if nixpkg_mode | default(false) else 'debpkg_mode' if debpkg_mode | default(false) else 'stage2_nix' if stage2_nix | default(false) else 'unknown' }} mode"

- name: Debug - Initial group status
  shell: |
    echo "=== Initial Group Status ==="
    for group in postgres ssl-cert pgbouncer; do
      echo "[$group]"
      getent group $group || echo "not found"
    done
  register: initial_groups
  changed_when: false

# Group and user management - consolidated version
- name: Ensure required groups exist with specific GIDs
  group:
    name: "{{ item.name }}"
    gid: "{{ item.gid }}"
    state: present
    system: yes
  loop:
    - { name: 'postgres', gid: 1002 }
    - { name: 'ssl-cert', gid: 1001 }
    - { name: 'pgbouncer', gid: 101 }
  when: stage2_nix

- name: Create pgbouncer user
  user:
    name: pgbouncer
    uid: 101
    shell: /bin/false
    system: yes
    comment: PgBouncer user
    group: pgbouncer
  when: stage2_nix

- name: Add pgbouncer to groups and verify
  block:
    - name: Add pgbouncer to groups
      shell: |
        usermod -a -G postgres,ssl-cert pgbouncer
        systemctl daemon-reload
        if command -v nscd >/dev/null 2>&1; then
          nscd -i group
          nscd -i passwd
        fi
        sleep 2
        # Verify membership
        id pgbouncer | grep -q "postgres" && \
        id pgbouncer | grep -q "ssl-cert" && \
        id pgbouncer | grep -q "pgbouncer"
      register: group_add_result
      failed_when: group_add_result.rc != 0

    - name: Verify final group memberships
      shell: |
        echo "=== Final Group Memberships ==="
        id pgbouncer
        echo "Group details:"
        getent group postgres
        getent group ssl-cert
        getent group pgbouncer
      register: final_verify
  when: stage2_nix

# Directory and file setup
- name: Create PgBouncer directories
  file:
    path: "{{ item.path }}"
    state: directory
    owner: pgbouncer
    group: pgbouncer
    mode: "{{ item.mode }}"
  loop:
    - { path: '/etc/pgbouncer', mode: '0700' }
    - { path: '/etc/pgbouncer-custom', mode: '0775' }
  when: stage2_nix

- name: Create config files
  file:
    path: "/etc/pgbouncer-custom/{{ item }}"
    state: touch
    owner: pgbouncer
    group: pgbouncer
    mode: '0664'
  loop:
    - 'generated-optimizations.ini'
    - 'custom-overrides.ini'
    - 'ssl-config.ini'
  when: stage2_nix

# Configuration files
- name: Configure PgBouncer
  block:
    - name: Copy pgbouncer.ini
      copy:
        src: files/pgbouncer_config/pgbouncer.ini.j2
        dest: /etc/pgbouncer/pgbouncer.ini
        owner: pgbouncer
        mode: '0700'

    - name: Create userlist.txt
      file:
        path: /etc/pgbouncer/userlist.txt
        state: touch
        owner: pgbouncer
        mode: '0700'

    - name: Configure tmpfiles.d
      template:
        src: files/pgbouncer_config/tmpfiles.d-pgbouncer.conf.j2
        dest: /etc/tmpfiles.d/pgbouncer.conf

    - name: Configure SSL
      copy:
        dest: /etc/pgbouncer-custom/ssl-config.ini
        content: |
          client_tls_sslmode = allow
        owner: pgbouncer
        group: pgbouncer
        mode: '0664'
  when: stage2_nix

# Permissions and fail2ban
- name: Configure permissions and security
  block:
    - name: Set file permissions
      shell: |
        chmod g+w /etc/postgresql/pg_hba.conf
        chmod g+w /etc/pgbouncer-custom/ssl-config.ini

    - name: Configure fail2ban
      template:
        src: "files/fail2ban_config/{{ item.src }}"
        dest: "/etc/fail2ban/{{ item.dest }}"
      loop:
        - { src: 'jail-pgbouncer.conf.j2', dest: 'jail.d/pgbouncer.conf' }
        - { src: 'filter-pgbouncer.conf.j2', dest: 'filter.d/pgbouncer.conf' }
  when: stage2_nix

# Systemd setup
- name: Configure systemd
  block:
    - name: Install service file
      template:
        src: files/pgbouncer_config/pgbouncer.service.j2
        dest: /etc/systemd/system/pgbouncer.service

    - name: Reload systemd
      systemd:
        daemon_reload: yes
  when: stage2_nix